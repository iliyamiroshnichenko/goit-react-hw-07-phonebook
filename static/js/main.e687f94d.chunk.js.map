{"version":3,"sources":["components/ContactListItem/ContactListItem.module.css","components/Container/Container.module.css","components/ContactForm/ContactForm.module.css","components/Filter/Filter.module.css","components/Loader/Loader.module.css","components/Container/Container.jsx","redux/contacts/contacts-actions.js","redux/contacts/contacts-operations.js","redux/contacts/contacts-selectors.js","redux/contacts/contacts-reducer.js","components/ContactForm/ContactForm.jsx","components/ContactListItem/ContactListItem.jsx","components/ContactList/ContactList.jsx","components/ContactList/ContactList.container.js","components/Filter/Filter.jsx","components/Loader/Loader.jsx","App.js","redux/store.js","index.js"],"names":["module","exports","Container","children","className","styles","container","fetchContactRequest","createAction","fetchContactSuccess","fetchContactError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","axios","defaults","baseURL","actions","name","number","dispatch","a","contact","get","data","alert","post","then","catch","err","contactId","delete","getFilter","state","contacts","filter","getLoading","loading","getError","error","getFilteredContacts","createSelector","items","normalizedFilter","toLowerCase","includes","createReducer","_","payload","id","combineReducers","initialState","connect","onSubmit","contactsOperations","useState","inputValue","setInputValue","changeInput","e","currentTarget","value","form","preventDefault","type","pattern","title","required","placeholder","onChange","ContactListItem","onDeleteContact","tel","onClick","ContactList","map","contactsSelectors","Filter","input","defaultProps","contactsActions","target","Loader","spinner","color","height","width","isLoading","isError","fetchContacts","useEffect","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","store","configureStore","reducer","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e687f94d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact\":\"ContactListItem_contact__2vnGX\",\"name\":\"ContactListItem_name__3bKLN\",\"tel\":\"ContactListItem_tel__1P4Wx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__1MMSL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1giE1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__3ap9j\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"Loader_spinner__3_6tZ\"};","import PropTypes from 'prop-types';\nimport styles from './Container.module.css';\n\nconst Container = ({ children }) => (\n  <div className={styles.container}>{children}</div>\n);\n\nContainer.propTypes = {\n  children: PropTypes.node,\n};\n\nexport default Container;\n","// import shortid from 'shortid';\nimport { createAction } from '@reduxjs/toolkit';\n\nconst fetchContactRequest = createAction('contacts/fetchContactRequest');\nconst fetchContactSuccess = createAction('contacts/fetchContactSuccess');\nconst fetchContactError = createAction('contacts/fetchContactError');\n\nconst addContactRequest = createAction('contacts/addContactRequest');\nconst addContactSuccess = createAction('contacts/addContactSuccess');\nconst addContactError = createAction('contacts/addContactError');\n\nconst deleteContactRequest = createAction('contacts/deleteContactRequest');\nconst deleteContactSuccess = createAction('contacts/deleteContactSuccess');\nconst deleteContactError = createAction('contacts/deleteContactError');\n\nconst changeFilter = createAction('contacts/changeFilter');\n\n// eslint-disable-next-line\nexport default {\n  fetchContactRequest,\n  fetchContactSuccess,\n  fetchContactError,\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  changeFilter,\n};\n","import axios from 'axios';\nimport actions from './contacts-actions';\n\naxios.defaults.baseURL = 'http://localhost:4040';\n\nconst {\n  fetchContactRequest,\n  fetchContactSuccess,\n  fetchContactError,\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n} = actions;\n\nconst fetchContacts = () => async dispatch => {\n  dispatch(fetchContactRequest());\n  try {\n    const { data } = await axios.get('/contacts');\n    dispatch(fetchContactSuccess(data));\n  } catch (error) {\n    dispatch(fetchContactError(error));\n  }\n};\n\nconst addContact = (name, number) => async dispatch => {\n  const contact = { name, number };\n  dispatch(fetchContactRequest());\n  try {\n    const { data } = await axios.get(`/contacts?name=${name}`);\n    if (data[0]?.name === name) {\n      alert(`${name} is already in contacts`);\n      dispatch(fetchContactSuccess());\n      return;\n    }\n    dispatch(addContactRequest());\n    axios\n      .post('/contacts', contact)\n      .then(({ data }) => dispatch(addContactSuccess(data)))\n      .catch(err => dispatch(addContactError(err)));\n  } catch (error) {\n    dispatch(fetchContactError(error));\n  }\n};\n\nconst deleteContact = contactId => dispatch => {\n  dispatch(deleteContactRequest());\n  axios\n    .delete(`/contacts/${contactId}`)\n    .then(() => dispatch(deleteContactSuccess(contactId)))\n    .catch(err => dispatch(deleteContactError(err)));\n};\n\n// eslint-disable-next-line\nexport default { addContact, deleteContact, fetchContacts };\n\n// const addContact = (name, number) => dispatch => {\n//   const contact = { name, number };\n//   dispatch(addContactRequest());\n//   axios\n//     .post('/contacts', contact)\n//     .then(({ data }) => dispatch(addContactSuccess(data)))\n//     .catch(err => dispatch(addContactError(err)));\n// };\n","import { createSelector } from '@reduxjs/toolkit';\n\nconst getLoading = state => state.contacts.loading;\nconst getError = state => state.contacts.error;\nconst getFilter = state => state.contacts.filter;\nconst getAllContacts = state => state.contacts.items;\n\nconst getFilteredContacts = createSelector(\n  [getAllContacts, getFilter],\n  (contacts, filter) => {\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(normalizedFilter),\n    );\n  },\n);\n\n// eslint-disable-next-line\nexport default {\n  getLoading,\n  getError,\n  getFilter,\n  getFilteredContacts,\n};\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport actions from './contacts-actions';\n\nconst {\n  fetchContactRequest,\n  fetchContactSuccess,\n  fetchContactError,\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  changeFilter,\n} = actions;\n\nconst items = createReducer([], {\n  [fetchContactSuccess]: (_, { payload }) => payload,\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\n  [deleteContactSuccess]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst filter = createReducer('', {\n  [changeFilter]: (_, { payload }) => payload,\n});\n\nconst loading = createReducer(false, {\n  [addContactRequest]: () => true,\n  [addContactSuccess]: () => false,\n  [addContactError]: () => false,\n  [deleteContactRequest]: () => true,\n  [deleteContactSuccess]: () => false,\n  [deleteContactError]: () => false,\n  [fetchContactRequest]: () => true,\n  [fetchContactSuccess]: () => false,\n  [fetchContactError]: () => false,\n});\n\nconst error = createReducer(false, {\n  [addContactRequest]: () => false,\n  [addContactSuccess]: () => false,\n  [addContactError]: () => true,\n  [deleteContactRequest]: () => false,\n  [deleteContactSuccess]: () => false,\n  [deleteContactError]: () => true,\n  [fetchContactRequest]: () => false,\n  [fetchContactSuccess]: () => false,\n  [fetchContactError]: () => true,\n});\n\nexport default combineReducers({ items, filter, loading, error });\n","import { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { contactsOperations } from '../../redux/contacts';\nimport PropTypes from 'prop-types';\nimport styles from './ContactForm.module.css';\n\nconst initialState = {\n  name: '',\n  number: '',\n};\n\nconst ContactForm = ({ onSubmit }) => {\n  const [inputValue, setInputValue] = useState(initialState);\n  const { name, number } = inputValue;\n\n  const changeInput = e => {\n    const { name, value } = e.currentTarget;\n    setInputValue({ ...inputValue, [name]: value });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit(name, number);\n    setInputValue(initialState);\n  };\n\n  return (\n    <form className={styles.form} onSubmit={handleSubmit}>\n      <label>\n        Name\n        <input\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          placeholder=\"Enter your name\"\n          onChange={changeInput}\n        />\n      </label>\n      <label>\n        Number\n        <input\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\n          title=\"Номер телефона должен состоять из 11-12 цифр и может содержать цифры, пробелы, тире, пузатые скобки и может начинаться с +\"\n          required\n          placeholder=\"Enter your number\"\n          onChange={changeInput}\n        />\n      </label>\n      <button type=\"submit\">Add contact</button>\n    </form>\n  );\n};\n\nContactForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nconst mapDispatchToProps = dispatch => ({\n  onSubmit: (name, number) =>\n    dispatch(contactsOperations.addContact(name, number)),\n});\n\nexport default connect(null, mapDispatchToProps)(ContactForm);\n","import PropTypes from 'prop-types';\nimport styles from './ContactListItem.module.css';\n\nconst ContactListItem = ({ id, name, number, onDeleteContact }) => {\n  return (\n    <li className={styles.contact}>\n      <p className={styles.name}>{name}</p>\n      <p className={styles.tel}>{number}</p>\n      <button type=\"button\" onClick={() => onDeleteContact(id)}>\n        Delete\n      </button>\n    </li>\n  );\n};\n\nContactListItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  onDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactListItem;\n","import PropTypes from 'prop-types';\nimport ContactListItem from '../ContactListItem';\n\nconst ContactList = ({ contacts, onDeleteContact }) => {\n  return (\n    <ul>\n      {contacts.map(({ id, name, number }) => (\n        <ContactListItem\n          key={id}\n          id={id}\n          name={name}\n          number={number}\n          onDeleteContact={onDeleteContact}\n        />\n      ))}\n    </ul>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n    }),\n  ).isRequired,\n  onDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactList;\n","import { connect } from 'react-redux';\nimport ContactList from './ContactList';\nimport { contactsOperations, contactsSelectors } from '../../redux/contacts';\n\nconst mapStateToProps = state => ({\n  contacts: contactsSelectors.getFilteredContacts(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onDeleteContact: id => dispatch(contactsOperations.deleteContact(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n","import PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { contactsSelectors, contactsActions } from '../../redux/contacts';\nimport styles from './Filter.module.css';\n\nconst Filter = ({ value, onChange }) => {\n  return (\n    <>\n      <label>\n        Find contacts by name\n        <input\n          className={styles.input}\n          type=\"text\"\n          value={value}\n          onChange={onChange}\n        />\n      </label>\n    </>\n  );\n};\n\nFilter.defaultProps = {\n  value: '',\n};\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  value: contactsSelectors.getFilter(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onChange: e => dispatch(contactsActions.changeFilter(e.target.value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import Spinner from 'react-loader-spinner';\nimport styles from './Loader.module.css';\n\nconst Loader = () => {\n  return (\n    <Spinner\n      className={styles.spinner}\n      type=\"Oval\"\n      color=\"#000\"\n      height={40}\n      width={40}\n    />\n  );\n};\n\nexport default Loader;\n","import Container from './components/Container';\nimport ContactForm from './components/ContactForm';\nimport ContactList from './components/ContactList';\nimport Filter from './components/Filter';\nimport Spinner from './components/Loader';\nimport { connect } from 'react-redux';\nimport { useEffect } from 'react';\nimport { contactsOperations, contactsSelectors } from './redux/contacts';\n\nconst App = ({ isLoading, isError, fetchContacts }) => {\n  // eslint-disable-next-line\n  useEffect(() => fetchContacts(), []);\n\n  return (\n    <Container>\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <Filter />\n      {isLoading ? (\n        <Spinner />\n      ) : isError ? (\n        <p>Oops, we have some loading error! :(</p>\n      ) : (\n        <ContactList />\n      )}\n    </Container>\n  );\n};\n\nconst mapStateToProps = state => ({\n  isLoading: contactsSelectors.getLoading(state),\n  isError: contactsSelectors.getError(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchContacts: () => dispatch(contactsOperations.fetchContacts()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport {\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport { contacts } from './contacts';\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n];\n\nconst store = configureStore({\n  reducer: { contacts },\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\n// const persistor = persistStore(store);\n\n// eslint-disable-next-line\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n// import { PersistGate } from 'redux-persist/integration/react';\nimport 'modern-normalize/modern-normalize.css';\nimport './styles.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      {/* <PersistGate loading={null} persistor={store.persistor}> */}\n      <App />\n      {/* </PersistGate> */}\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}